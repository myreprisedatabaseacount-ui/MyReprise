/**
 * Script pour combiner toutes les parties des donn√©es Cathedis
 * G√©n√®re un fichier SQL unique avec toutes les requ√™tes INSERT
 */

const fs = require('fs');
const path = require('path');

async function combineAllParts() {
    try {
        console.log('üöÄ Combinaison de toutes les 46 parties des donn√©es Cathedis...');
        
        const outputFile = path.join(__dirname, 'data-addresses-script.sql');
        let combinedContent = '';
        let totalParts = 0;
        let totalLines = 0;
        
        // Header du fichier
        combinedContent += '-- ===================================================\n';
        combinedContent += '-- Script SQL pour ins√©rer toutes les donn√©es Cathedis\n';
        combinedContent += '-- G√©n√©r√© automatiquement le ' + new Date().toISOString() + '\n';
        combinedContent += '-- ===================================================\n\n';
        
        combinedContent += '-- D√©sactiver les v√©rifications de cl√©s √©trang√®res temporairement\n';
        combinedContent += 'SET FOREIGN_KEY_CHECKS = 0;\n\n';
        
        combinedContent += '-- Vider la table addresses avant l\'insertion\n';
        combinedContent += 'DELETE FROM addresses;\n\n';
        
        combinedContent += '-- R√©initialiser l\'auto-increment\n';
        combinedContent += 'ALTER TABLE addresses AUTO_INCREMENT = 1;\n\n';
        
        // Lire et combiner tous les fichiers de parties (1 √† 46)
        for (let part = 1; part <= 46; part++) {
            const partFile = path.join(__dirname, `data-addresses-part${part}.sql`);
            
            if (fs.existsSync(partFile)) {
                console.log(`üìÑ Lecture de la partie ${part}...`);
                
                const partContent = fs.readFileSync(partFile, 'utf8');
                
                // Ajouter un commentaire de section
                combinedContent += `-- ===================================================\n`;
                combinedContent += `-- PARTIE ${part} DES DONN√âES CATHEDIS\n`;
                combinedContent += `-- ===================================================\n\n`;
                
                combinedContent += partContent;
                combinedContent += '\n\n';
                
                totalParts++;
                totalLines += partContent.split('\n').length;
            } else {
                console.log(`‚ö†Ô∏è  Fichier de la partie ${part} non trouv√©: ${partFile}`);
            }
        }
        
        // Footer du fichier
        combinedContent += '-- ===================================================\n';
        combinedContent += '-- FIN DU SCRIPT\n';
        combinedContent += '-- ===================================================\n\n';
        
        combinedContent += '-- R√©activer les v√©rifications de cl√©s √©trang√®res\n';
        combinedContent += 'SET FOREIGN_KEY_CHECKS = 1;\n\n';
        
        combinedContent += '-- Afficher le nombre total d\'adresses ins√©r√©es\n';
        combinedContent += 'SELECT COUNT(*) as total_addresses FROM addresses;\n\n';
        
        combinedContent += '-- Afficher quelques statistiques\n';
        combinedContent += 'SELECT \n';
        combinedContent += '    COUNT(*) as total_addresses,\n';
        combinedContent += '    COUNT(DISTINCT city) as total_cities,\n';
        combinedContent += '    COUNT(DISTINCT sector) as total_sectors\n';
        combinedContent += 'FROM addresses;\n\n';
        
        // Sauvegarder le fichier combin√©
        fs.writeFileSync(outputFile, combinedContent, 'utf8');
        
        console.log('\n‚úÖ Combinaison termin√©e avec succ√®s!');
        console.log(`üìÑ Fichier combin√©: ${outputFile}`);
        console.log(`üìä Parties trait√©es: ${totalParts}/46`);
        console.log(`üìä Lignes totales: ${totalLines}`);
        console.log(`üìä Taille du fichier: ${(fs.statSync(outputFile).size / 1024).toFixed(2)} KB`);
        
        console.log('\nüìã Instructions:');
        console.log('1. Ex√©cutez le fichier SQL combin√© dans MySQL:');
        console.log(`   mysql -u root -p < ${outputFile}`);
        console.log('2. V√©rifiez les donn√©es ins√©r√©es');
        console.log('3. Les statistiques s\'afficheront automatiquement √† la fin');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la combinaison:', error);
        throw error;
    }
}

// Ex√©cuter la combinaison
if (require.main === module) {
    combineAllParts()
        .then(() => {
            console.log('‚úÖ Script termin√©');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå Erreur:', error);
            process.exit(1);
        });
}

module.exports = { combineAllParts };